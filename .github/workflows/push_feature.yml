# This workflow will run on push for any "feature" or fix branch, auto-creating pull request to merge in "dev", auto-merge if "clean build CI test" check pass

name: Push Feature or Fix to Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "feature" or "fix" branches
  push:
    branches:
      - 'feature/**'
      - 'fix/**'
      # TEMP TO SIMPLIFY TESTING; REMOVE AFTERWARDS
      # - dev

# The following workflow code is from CI-iOS.yml

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  echo:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo push from feature or fix branch
      
  # Build and test
  ci:
#    uses: ./.github/workflows/ci.yml
    uses: ./.github/workflows/ci-fake.yml
    with:
      finish_ok: true

#  ci:
#    # The type of runner that the job will run on
#    runs-on: macos-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#    - uses: actions/checkout@v2
#
#    - name: Select Xcode
#      # run: sudo xcode-select -switch /Applications/Xcode_13.2.1.app
#      # - name: Xcode Select
#      uses: devbotsxyz/xcode-select@v1.1.0
#
#    - name: Xcode version
#      run: /usr/bin/xcodebuild -version
#
#    - name: Run Test App script
#      run: exec ./.github/scripts/test_app.sh

  create_and_merge_pull_request:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.2

    - name: Set auth token
      run: git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        
    # Make changes to pull request here

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      id: cpr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # token: ${{ secrets.PAT }}
        delete-branch: true
        base: dev
        
    - name: Print
      run |
        echo "${{ steps.cpr.outputs.pull-request-operation }}"

    - name: Check outputs
      if: steps.cpr.outputs.pull-request-number
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"; exit 1;
          
    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v2
      with:
        token: ${{ secrets.PAT }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
        merge-method: squash


#  # Auto-create pull request only if CI passes
#  auto_create_pull_request:
#    needs: ci
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo pull request from feature or fix branch into dev was created after successful CI check
#
#      - name: checking out code
#        uses: actions/checkout@v2
#
#      - name: extract git commit data
#        uses: rlespinasse/git-commit-data-action@v1.x
#
#      - name: Update author information
#        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR
#
#      - name: Raise PR
#        uses: peter-evans/create-pull-request@v4.1.0
#        with:
#          branch: "auto-pr-branch"
#          base: dev
#          title: "demo for auto pr"
#          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}
#          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}
#          body:
#            This is to show automatic PR creation
#          token: ${{ secrets.GITHUB_TOKEN }}
#          delete-branch: true
#
#  # Auto-merge with rebase (!!)
#  # https://github.com/peter-evans/enable-pull-request-automerge
##        - uses: peter-evans/enable-pull-request-automerge@v2
##        with:
##          token: ${{ secrets.PAT }}
##          pull-request-number: 1
#
#  auto_merge_with_rebase:
#    needs: auto_create_pull_request
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo pull request was auto-merged, branch deleted
#      # - name: Approve Pull Request
#      #  uses: juliangruber/approve-pull-request-action@v1.1.1

          
  # This workflow contains a single job called "build"
#  build-and-test:
#    # The type of runner that the job will run on
#    runs-on: macos-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#    - uses: actions/checkout@v2
#
#    - name: Select Xcode
#      # run: sudo xcode-select -switch /Applications/Xcode_13.2.1.app
#      # - name: Xcode Select
#      uses: devbotsxyz/xcode-select@v1.1.0
#
#
#    - name: Xcode version
#      run: /usr/bin/xcodebuild -version
#
#    - name: Build and Test
#      run: xcodebuild clean build test -project Meme-Ory.xcodeproj -scheme "CI" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 13 Pro" ONLY_ACTIVE_ARCH=YES
      
  # another job is to create a pull request
#  create-pull_request:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#         with:
#           ref: dev
#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v4.0.4
#        with:
#          # token: ${{ secrets.GH_TOKEN }}
#          commit-message: Auto Pull Request
#          title: Auto-created Pull Request
#          # branch: ${{ steps.vars.outputs.branch }}
#          # delete-branch: true
#          # base: dev
