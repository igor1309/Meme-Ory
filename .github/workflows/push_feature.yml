# This workflow will run on push for any "feature" or fix branch, auto-creating pull request to merge in "dev", auto-merge if "clean build CI test" check pass

name: Push-Feature

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "feature" or "fix" branches
  push:
    branches:
      - 'feature/**'
      - 'fix/**'

# The following workflow code is from CI-iOS.yml

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
      - run: echo push from feature or fix branch
  # build and test
  ci:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Select Xcode
      # run: sudo xcode-select -switch /Applications/Xcode_13.2.1.app
      # - name: Xcode Select
      uses: devbotsxyz/xcode-select@v1.1.0

    - name: Xcode version
      run: /usr/bin/xcodebuild -version

    - name: Run Test App script
      run: exec ./.github/scripts/test_app.sh

  # Auto-create pull request only if CI passes
  auto-create-pull-request:
    needs: ci
        runs-on: ubuntu-latest
        steps:
          - run: echo pull request from feature or fix branch into dev was created after successful CI check
          
  # Auto-merge with rebase (!!)
  auto-merge-with-rebase:
    needs: auto-create-pull-request
        runs-on: ubuntu-latest
        steps:
          - run: echo pull request was auto-merged
          
  # This workflow contains a single job called "build"
#  build-and-test:
#    # The type of runner that the job will run on
#    runs-on: macos-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#    - uses: actions/checkout@v2
#
#    - name: Select Xcode
#      # run: sudo xcode-select -switch /Applications/Xcode_13.2.1.app
#      # - name: Xcode Select
#      uses: devbotsxyz/xcode-select@v1.1.0
#
#
#    - name: Xcode version
#      run: /usr/bin/xcodebuild -version
#
#    - name: Build and Test
#      run: xcodebuild clean build test -project Meme-Ory.xcodeproj -scheme "CI" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 13 Pro" ONLY_ACTIVE_ARCH=YES
      
  # another job is to create a pull request
#  create-pull_request:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#         with:
#           ref: dev
#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v4.0.4
#        with:
#          # token: ${{ secrets.GH_TOKEN }}
#          commit-message: Auto Pull Request
#          title: Auto-created Pull Request
#          # branch: ${{ steps.vars.outputs.branch }}
#          # delete-branch: true
#          # base: dev
